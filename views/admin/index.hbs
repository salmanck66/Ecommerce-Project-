
		<main>
			<div class="head-title">
				<div class="left">
					<h1>Dashboard</h1>
					<ul class="breadcrumb">
						<li>
							<a href="#">Dashboard</a>
						</li>
						<li><i class='bx bx-chevron-right' ></i></li>
						<li>
							<a class="active" href="#">Home</a>
						</li>
					</ul>
				</div>
			</div>
		<table id="salesTable" hidden>
		<tr>
			<th>Category</th>
			<th>Total Sales</th>
		</tr>
		{{#each datasles}}
		<tr>
			<td>{{this._id}}</td>
			<td>{{this.totalSales}}</td>
		</tr>
		{{/each}}
	</table>

		<table id="salesTableMonthly">
		<tr>
			<th>month</th>
			<th>Total Sales</th>
		</tr>
		{{#each monthlySalesData}}
		<tr>
			<td>{{this.month}}</td>
			<td>{{this.totalSales}}</td>
		</tr>
		{{/each}}
	</table>

			<ul class="box-info">
				<li>
					<i class='bx bxs-calendar-check' ></i>
					<span class="text">
						<h3>{{order.length}}</h3>
						<p>Total Orders</p>
					</span>
				</li>
				<li>
					<i class='bx bxs-group' ></i>
					<span class="text">
						<h3>{{visit.count}}</h3>
						<p>Visitors</p>
					</span>
				</li>
				<li>
					<i class='bx bxs-dollar-circle' ></i>
					<span class="text">
						<h3>{{totalAmount}}</h3>
						<p>Total Sales</p>
					</span>
				</li>
			</ul>


			<div class="table-data">
				<div class="order">
					<div class="head">
						<h3>Recent Orders</h3>
						<i class='bx bx-search' ></i>
						<i class='bx bx-filter' ></i>
					</div>
					<table>
						<thead>
							<tr>
								<th>Order ID</th>
								<th>Custmer Name</th>
								<th>Date Order</th>
								<th>Action</th>
							</tr>
						</thead>
						<tbody>
							{{#each order}}
			<tr>
				
    			<td>{{this.orderId}}</td>
    				<td>
    			    
     			   <p>{{this.shippingAddress.firstName}} {{this.shippingAddress.lastName}}</p>
 			   </td>
    			<td class="col-4">{{this.orderDate}}</td>
    		<td><button type="button" class="view-order-btn btn btn-outline-secondary" data-order-id="{{this.orderId}}">View order</button></td>
			</tr>
			{{/each}}
			

<!-- Missing OrderID in the third row -->
						</tbody>
					</table>
				</div>
				<div class="todo">
					<div class="head ps-4">
						<h3>Statitics</h3>
					</div>
					<ul class="todo-list bg-white">
						<li class="card bg-white">
						<canvas id="monthlySalesChart"></canvas>
						</li>
						<li class="card bg-white" sty>
							<canvas id="pieChart"></canvas>
						
						</li>

					</ul>
				</div>
			</div>
			
		</main>
		<!-- MAIN -->
	</section>
	<!-- CONTENT -->
	


	<script>
        function createPieChart() {
            const salesTable = document.getElementById('salesTable');
            const rows = salesTable.getElementsByTagName('tr');

            const labels = [];
            const data = [];

            // Skip the header row
            for (let i = 1; i < rows.length; i++) {
                const cells = rows[i].getElementsByTagName('td');
                if (cells.length >= 2) {
                    labels.push(cells[0].textContent.trim());
                    data.push(parseInt(cells[1].textContent.trim()));
                }
            }

            // Create pie chart
            const ctx = document.getElementById('pieChart').getContext('2d');
            const pieChart = new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Total Sales',
                        data: data,
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.5)',
                            'rgba(54, 162, 235, 0.5)',
                            // Add more colors as needed
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            // Add more colors as needed
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    // Add options as needed
                }
            });
        }

        // Call the function to create the pie chart
        createPieChart();
        function getMonthName(monthNumber) {
            const monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
            return monthNames[monthNumber - 1]; // Adjust month index to match array index
        }

        // Function to extract data from the table and create the chart
        function createMonthlySalesChartFromTable() {
            const table = document.getElementById('salesTableMonthly');
            const rows = table.querySelectorAll('tr');
            const labels = [];
            const data = [];

            // Skip the first row (header row)
            for (let i = 1; i < rows.length; i++) {
                const columns = rows[i].querySelectorAll('td');
                const month = getMonthName(parseInt(columns[0].textContent));
                const totalSales = parseInt(columns[1].textContent);
                labels.push(month);
                data.push(totalSales);
            }

            const ctx = document.getElementById('monthlySalesChart').getContext('2d');
            const monthlySalesChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Monthly Sales',
                        data: data,
                        backgroundColor: 'rgba(255, 159, 64, 0.5)',
                        borderColor: 'rgba(255, 159, 64, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        }

        // Call the function to extract data from the table and create the chart
        createMonthlySalesChartFromTable();


 document.addEventListener('DOMContentLoaded', function() {
        const viewOrderButtons = document.querySelectorAll('.view-order-btn');
        
        viewOrderButtons.forEach(button => {
            button.addEventListener('click', function() {
                const orderId = button.dataset.orderId;
                const url = `/order?orderId=${orderId}`; // Construct the URL with the order ID as a query parameter
                window.location.href = url; // Redirect to the order details page
            });
        });
    });
	   allSideMenu.forEach(item=> {
	const li = item.parentElement;

	item.addEventListener('click', function () {
		allSideMenu.forEach(i=> {
			i.parentElement.classList.remove('active');
		})
		li.classList.add('active');
	})
});

	</script>
	

