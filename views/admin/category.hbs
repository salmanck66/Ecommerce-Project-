<!-- CATEGORY MANAGEMENT SECTION -->
<section class="container category-management mt-5 mb-5">
    <h2 class="mb-4">Category Management</h2>

    <!-- Existing Categories -->
    <div class="existing-categories mb-4">
        <h3>Existing Categories</h3>
        <ul class="list-group" id="existingCategoriesList">
            <!-- Existing categories will be dynamically populated here -->
        </ul>
    </div>

    <!-- Add New Category Form -->
    <div class="add-new-category">
        <h3>Add New Category</h3>
        <form action="/add-category" id="addCategoryForm" method="post" enctype="multipart/form-data">
            <div class="mb-3">
                <label for="categoryName" class="form-label">Category Name</label>
                <input type="text" class="form-control" id="categoryName" name="categoryName" placeholder="Enter category name">
            </div>
            <div class="mb-3">
                <label for="categoryImage" class="form-label">Category Image</label>
                <input type="file" class="form-control" id="categoryImage" name="categoryImage">
            </div>
            <button type="submit" class="btn btn-primary">Add Category</button>
        </form>
    </div>

    <!-- Add Subcategory Form -->
    <div class="add-subcategory mt-4">
        <h3>Add Subcategory</h3>
        <form id="addSubcategoryForm">
            <div class="mb-3">
                <label for="subcategoryName" class="form-label">Subcategory Name</label>
                <input type="text" class="form-control" id="subcategoryName" placeholder="Enter subcategory name">
            </div>
            <div class="mb-3">
                <label for="parentCategory" class="form-label">Parent Category</label>
                <select class="form-select" id="parentCategory">
                    <option value="" selected>Select parent category</option>
                    <!-- Parent categories will be dynamically populated here -->
                </select>
            </div>
            <button type="submit" class="btn btn-primary">Add Subcategory</button>
        </form>
    </div>
</section>
<!-- CATEGORY MANAGEMENT SECTION -->

<!-- Script to handle dynamic population of existing categories and parent category options -->
<script>
    // Function to populate existing categories
    function populateExistingCategories(categories) {
        const existingCategoriesList = document.getElementById('existingCategoriesList');
        existingCategoriesList.innerHTML = '';
        categories.forEach(category => {
            const listItem = document.createElement('li');
            listItem.classList.add('list-group-item', 'd-flex', 'justify-content-between', 'align-items-center');
            listItem.textContent = category.name;
            const removeButton = document.createElement('button');
            removeButton.classList.add('btn', 'btn-danger');
            removeButton.textContent = 'Remove';
            // Add event listener to remove category when clicked
            removeButton.addEventListener('click', () => {
                // Implement remove category functionality here
                console.log('Remove category:', category._id);
            });
            listItem.appendChild(removeButton);
            existingCategoriesList.appendChild(listItem);
        });
    }

    // Function to populate parent category options
    function populateParentCategories(categories) {
        const parentCategorySelect = document.getElementById('parentCategory');
        parentCategorySelect.innerHTML = '<option value="" selected>Select parent category</option>';
        categories.forEach(category => {
            const option = document.createElement('option');
            option.value = category._id;
            option.textContent = category.name;
            parentCategorySelect.appendChild(option);
        });
    }

    // Example data for testing
    const categoriesData = [
        { _id: 'category_id_1', name: 'Category 3' },
        { _id: 'category_id_2', name: 'Category 2' }
        // Add more categories if needed
    ];

    // Populate existing categories and parent category options
    populateExistingCategories(categoriesData);
    populateParentCategories(categoriesData);
</script>
