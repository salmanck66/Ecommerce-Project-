
	
	<!-- Product -->
		<hr>
	<div class="bg0 m-t-0 p-b-140 classbb" >
	
		<div class="container mt-5  ">
<div class="flex-w flex-sb-m p-b-52">
    <div class="d-flex justify-content-between ">
		
        <div class="flex-w flex-l-m filter-tope-group m-tb-10 border-top-2 d-none d-lg-flex">
            <button class="stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 how-active1 category-button" data-category="all">
                All Products
            </button>
            {{#each category}}
            <button class="stext-106 cl6 hov 1 bor3 trans-04 m-r-32 m-tb-5 category-button" data-category="{{this.name}}">
                {{this.name}}
            </button>
            {{/each}}
        </div>
    </div>

<div class="d-flex justify-content-end w-100" >

<div class="dropdown d-lg-none mr-1">
     <button class="btn btn-secondary dropdown-toggle" type="button" id="soccerClubsDropdownButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
        Categories
    </button>

    <div class="dropdown-menu" aria-labelledby="sortDropdownMenuButton">
        <a class="dropdown-item category-button" data-category="all">All Products</a>
		{{#each category}}
        <a class="dropdown-item category-button"  href="#" id="sortPriceDesc" data-category="{{this.name}}">{{this.name}}</a>
		{{/each}}

    </div>
</div>

<div class="dropdown ">
    <button class="btn btn-secondary dropdown-toggle" id="sortDropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-sort-up" viewBox="0 0 16 16">
            <path d="M3.5 12.5a.5.5 0 0 1-1 0V3.707L1.354 4.854a.5.5 0 1 1-.708-.708l2-1.999.007-.007a.5.5 0 0 1 .7.006l2 2a.5.5 0 1 1-.707.708L3.5 3.707zm3.5-9a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5M7.5 6a.5.5 0 0 0 0 1h5a.5.5 0 0 0 0-1zm0 3a.5.5 0 0 0 0 1h3a.5.5 0 0 0 0-1zm0 3a.5.5 0 0 0 0 1h1a.5.5 0 0 0 0-1z"/>
        </svg>
    </button>
    <div class="dropdown-menu" aria-labelledby="sortDropdownMenuButton">
        <a class="dropdown-item" href="#" id="sortPriceAsc">Price : Low to High</a>
        <a class="dropdown-item" href="#" id="sortPriceDescs">Price : High to Low</a>
        <a class="dropdown-item" href="#" id="sortNewness">Latest</a>
    </div>
</div>
<div class="dropdown ml-1" >
    <button class="btn btn-secondary dropdown-toggle" type="button" id="soccerClubsDropdownButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
        Filter Team
    </button>
    <div style="z-index: 9999;" class="dropdown-menu" aria-labelledby="soccerClubsDropdownButton">
    	<a class="dropdown-item Real" href="#">Real Madrid CF</a>
        <a class="dropdown-item Barcelona" href="#">FC Barcelona</a>
        <a class="dropdown-item Atletico" href="#">Athletico Madrid</a>
        <a class="dropdown-item united" href="#">Manchester United</a>
        <a class="dropdown-item Arsenal" href="#">Arsenal FC</a>
        <a class="dropdown-item Tottenham" href="#">Tottenham Hotspur</a>
        <a class="dropdown-item Newcastle" href="#">Newcastle United FC</a>
        <a class="dropdown-item Liverpool" href="#">Liverpool FC</a>
        <a class="dropdown-item AC" href="#">AC Milan FC</a>
        <a class="dropdown-item Milan" href="#">Inter Milan FC</a>
        <a class="dropdown-item Miami" href="#">Inter Miami FC</a>
        <a class="dropdown-item Bayern" href="#">Bayern Munich</a>
        <a class="dropdown-item Borussia" href="#">Borussia Dortmund</a>
        <a class="dropdown-item Juventus" href="#">Juventus FC</a>
        <a class="dropdown-item PSG" href="#">Paris Saint-Germain</a>
        <a class="dropdown-item Chelsea" href="#">Chelsea FC</a>
        <a class="dropdown-item City" href="#">Manchester City</a>
        <a class="dropdown-item Roma" href="#">AS Roma</a>
        <a class="dropdown-item Sporting" href="#">Sporting CP</a>
        <a class="dropdown-item Ajax" href="#">Ajax FC</a>
        <a class="dropdown-item Nassr" href="#">Al-Nassr FC</a>
        <a class="dropdown-item Ahli" href="#">Al-Ahli FC</a>
        <a class="dropdown-item Argentina" href="#">Argentina</a>
        <a class="dropdown-item Brazil" href="#">Brazil</a>
        <a class="dropdown-item Japan" href="#">Japan</a>
        <a class="dropdown-item India" href="#">India</a>
        <a class="dropdown-item Portugal" href="#">Portugal</a>
        <a class="dropdown-item England" href="#">England</a>
        <a class="dropdown-item Netherlands" href="#">Netherlands</a>
        <a class="dropdown-item Italy" href="#">Italy</a>
        <a class="dropdown-item France" href="#">France</a>
        <a class="dropdown-item SouthKorea" href="#">South Korea</a>
        <a class="dropdown-item Spain" href="#">Spain</a>
        <a class="dropdown-item Germany" href="#">Germany</a>
        <a class="dropdown-item Croatia" href="#">Croatia</a>
    </div>
</div>

</div>	
	
</div>


<div class="row g-4 productbox">
    {{#each products}}
    <div class="col-6 col-md-4 col-lg-3">
        <div class="card h-100 border-0 shadow-sm">
            <a href="productdetail?id={{this._id}}" class="text-decoration-none">
                <img src="{{this.image.[0]}}" class="card-img-top img-fluid" alt="Product Image">
            </a>
            <div class="card-body d-flex flex-column justify-content-between">
                <div>
                    <div class="d-flex justify-content-between align-items-center mt-3">
                        <h5 class="card-title text-truncate">{{this.name}}</h5>
                        <a href="#" onclick="addToWishlist('{{../userId}}', '{{this._id}}')" class="text-muted">
                            {{#if this.isWishlisted}}
                            <i class="fa fa-heart" aria-hidden="true"></i>
                            {{else}}
                            <i class="fa fa-heart-o" aria-hidden="true"></i>
                            {{/if}}
                        </a>
                    </div>
                    <p class="card-text text-muted small">{{this.variant}}</p>
                </div>
                <div class="d-flex justify-content-between align-items-center mt-3">
                    <div>
                        <span class="fw-bold">₹{{this.price}}</span>
                        <span class="text-muted text-decoration-line-through small">₹{{this.mrp}}</span>
                    </div>
                </div>
                {{#if this.tags}}
                <div class="mt-2">
                    <span class="badge bg-danger text-light">{{this.tags}}</span>
                </div>
                {{/if}}
            </div>
        </div>
    </div>
    {{/each}}
</div>
		
				</div>
			</div>

			<!-- Load more -->

		</div>
	</div>
		

	<!-- Back to top -->
	<div class="btn-back-to-top" id="myBtn">
		<span class="symbol-btn-back-to-top">
			<i class="zmdi zmdi-chevron-up"></i>
		</span>
	</div>
<p id="userID" hidden>{{userId}}</p>



<!--===============================================================================================-->	
	<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
	<script src="vendor/jquery/jquery-3.2.1.min.js"></script>
<!--===============================================================================================-->
	<script src="vendor/animsition/js/animsition.min.js"></script>
<!--===============================================================================================-->
	<script src="vendor/bootstrap/js/popper.js"></script>
	<script src="vendor/bootstrap/js/bootstrap.min.js"></script>
<!--===============================================================================================-->
	<script src="vendor/select2/select2.min.js"></script>
	<script>
	document.getElementById('sortPriceAsc').addEventListener('click', async () => {
    console.log("Sorting by Price Ascending");
    await sortProducts('price_asc');
});

document.getElementById('sortPriceDescs').addEventListener('click', async () => {
    console.log("Sorting by Price Descending");
    await sortProducts('price_desc');
});

document.getElementById('sortNewness').addEventListener('click', async () => {
    console.log("Sorting by Newness");
    await sortProducts('newness');
});


async function sortProducts(sortType) {
    try {
        const response = await axios.get(`/sort/${sortType}`);
        const productsHTML = response.data;
        document.querySelector('.productbox').innerHTML = productsHTML;
    } catch (error) {
        console.error('Error sorting products:', error);
    }
}

		$(".js-select2").each(function(){
			$(this).select2({
				minimumResultsForSearch: 20,
				dropdownParent: $(this).next('.dropDownSelect2')
			});
		})
	</script>
<!--===============================================================================================-->
	<script src="vendor/daterangepicker/moment.min.js"></script>
	<script src="vendor/daterangepicker/daterangepicker.js"></script>
<!--===============================================================================================-->
	<script src="vendor/slick/slick.min.js"></script>
	<script src="js/slick-custom.js"></script>
<!--===============================================================================================-->
	<script src="vendor/parallax100/parallax100.js"></script>
	<script>
        $('.parallax100').parallax100();
	</script>
<!--===============================================================================================-->
	<script src="vendor/MagnificPopup/jquery.magnific-popup.min.js"></script>
	<script>
		$('.gallery-lb').each(function() { // the containers for all your galleries
			$(this).magnificPopup({
		        delegate: 'a', // the selector for gallery item
		        type: 'image',
		        gallery: {
		        	enabled:true
		        },
		        mainClass: 'mfp-fade'
		    });
		});
	</script>
<!--===============================================================================================-->
	<script src="vendor/isotope/isotope.pkgd.min.js"></script>
<!--===============================================================================================-->
	<script src="vendor/sweetalert/sweetalert.min.js"></script>
	<script>
		document.addEventListener('DOMContentLoaded', function() {
    // Get all category buttons
    const categoryButtons = document.querySelectorAll('.category-button');
});

		$('.js-addwish-b2, .js-addwish-detail').on('click', function(e){
			e.preventDefault();
		});

		$('.js-addwish-b2').each(function(){
			var nameProduct = $(this).parent().parent().find('.js-name-b2').html();
			$(this).on('click', function(){
				swal(nameProduct, "is added to wishlist !", "success");

				$(this).addClass('js-addedwish-b2');
				$(this).off('click');
			});
		});

		$('.js-addwish-detail').each(function(){
			var nameProduct = $(this).parent().parent().parent().find('.js-name-detail').html();

			$(this).on('click', function(){
				swal(nameProduct, "is added to wishlist !", "success");

				$(this).addClass('js-addedwish-detail');
				$(this).off('click');
			});
		});
function addToWishlist(userId, productId) {
    fetch('/add-to-wishlist', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ userId, productId })
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Failed to add/remove product to/from wishlist');
        }
        if (response.redirected) {
            window.location.href = "/login";
        }
        return response.json();
    })
    .then(data => {


        // Toggle the wishlist icon
        const wishlistIcon = document.querySelector(`[onclick="addToWishlist('${userId}', '${productId}')"] i`);
        if (wishlistIcon) {
            wishlistIcon.classList.toggle('fa-heart');
            wishlistIcon.classList.toggle('fa-heart-o');
        }
    })
    .catch(error => {
        console.error('Error:', error);
    });
}

		/*---------------------------------------------*/

		$('.js-addcart-detail').each(function(){
			var nameProduct = $(this).parent().parent().parent().parent().find('.js-name-detail').html();
			$(this).on('click', function(){
				swal(nameProduct, "is added to cart !", "success");
			});
		});
	
	</script>
<!--===============================================================================================-->
	<script src="vendor/perfect-scrollbar/perfect-scrollbar.min.js"></script>
	<script>
		$('.js-pscroll').each(function(){
			$(this).css('position','relative');
			$(this).css('overflow','hidden');
			var ps = new PerfectScrollbar(this, {
				wheelSpeed: 1,
				scrollingThreshold: 1000,
				wheelPropagation: false,
			});

			$(window).on('resize', function(){
				ps.update();
			})
		});
	</script>
<!--===============================================================================================-->
<script>
document.querySelectorAll('.category-button').forEach(button => {
    button.addEventListener('click', async () => {
        const category = button.getAttribute('data-category');
        console.log(`Category selected: ${category}`);

        try {
            // Fetch the products for the selected category
            const response = await axios.get(`/category/${category}`);
            console.log('Products received:', response.data);

            // Update the productbox with the new products
            document.querySelector('.productbox').innerHTML = response.data;

            // Reinitialize Isotope (if used) after updating the DOM
            const productBox = document.querySelector('.productbox');
            if (window.Isotope) {
                new Isotope(productBox, {
                    itemSelector: '.col-6',
                    layoutMode: 'fitRows'
                });
            }

            // Optionally, force layout recalculation
            window.dispatchEvent(new Event('resize'));
        } catch (error) {
            console.error('Error fetching category products:', error);
        }
    });
})
document.querySelectorAll('.dropdown-item').forEach(item => {
    item.addEventListener('click', async () => {
        const clubClassName = item.classList[1]; // Extract the second class name which represents the club
        try {
            const response = await axios.get(`/clubs/${clubClassName}`); 
            document.querySelector('.productbox').innerHTML = response.data;

            // If using Isotope or any grid layout system, reinitialize or trigger layout recalculation here:
            const productBox = document.querySelector('.productbox');
            if (window.Isotope) {
                new Isotope(productBox, {
                    itemSelector: '.col-6', // Update selector to match your item class
                    layoutMode: 'fitRows'
                });
            }

            // If not using Isotope, make sure Bootstrap grid is correctly applied:
            window.dispatchEvent(new Event('resize')); // Trigger a window resize event to force layout recalculation
        } catch (error) {
            console.error('Error fetching club data:', error);
        }
    });
});

</script>


