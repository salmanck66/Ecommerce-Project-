
	<!-- breadcrumb -->
	<div class="container" style="margin-top: 12vh;">
		<div class="bread-crumb flex-w p-l-25 p-r-15 p-t-30 p-lr-0-lg">
			<a href="index.html" class="stext-109 cl8 hov-cl1 trans-04">
				Home
				<i class="fa fa-angle-right m-l-9 m-r-10" aria-hidden="true"></i>
			</a>

			<a href="product.html" class="stext-109 cl8 hov-cl1 trans-04">
				{{productsss.category}}
				<i class="fa fa-angle-right m-l-9 m-r-10" aria-hidden="true"></i>
			</a>
	
			<span class="stext-109 cl4">
				{{productsss.name}}
			</span>
		</div>
	</div>
		

	<!-- Product Detail -->
	<section class="sec-product-detail bg0 p-t-65 p-b-60">
		<div class="container">
			<div class="row">
				<div class="col-md-6 col-lg-7 p-b-30">
					<div class="p-l-25 p-r-30 p-lr-0-lg">
						<div class="wrap-slick3 flex-sb flex-w">
							<div class="wrap-slick3-dots"></div>
							<div class="wrap-slick3-arrows flex-sb-m flex-w"></div>

							<div class="slick3 gallery-lb">
								<div class="item-slick3" data-thumb="{{productsss.image.[0]}}">
									<div class="wrap-pic-w pos-relative">
										<img src="{{productsss.image.[0]}}" alt="IMG-PRODUCT">

										<a class="flex-c-m size-108 how-pos1 bor0 fs-16 cl10 bg0 hov-btn3 trans-04" href="{{productsss.image.[0]}}">
											<i class="fa fa-expand"></i>
										</a>
									</div>
								</div>

								<div class="item-slick3" data-thumb="{{productsss.image.[1]}}">
									<div class="wrap-pic-w pos-relative">
										<img src="{{productsss.image.[1]}}" alt="IMG-PRODUCT">

										<a class="flex-c-m size-108 how-pos1 bor0 fs-16 cl10 bg0 hov-btn3 trans-04" href="{{productsss.image.[1]}}">
											<i class="fa fa-expand"></i>
										</a>
									</div>
								</div>
								{{#if productsss.image.[2] }}
								<div class="item-slick3" data-thumb="{{productsss.image.[2]}}">
									<div class="wrap-pic-w pos-relative">
										<img src="{{productsss.image.[2]}}" alt="IMG-PRODUCT">

										<a class="flex-c-m size-108 how-pos1 bor0 fs-16 cl10 bg0 hov-btn3 trans-04" href="{{productsss.image.[2]}}">
											<i class="fa fa-expand"></i>
										</a>
									</div>
								</div>
								{{/if}}
							</div>
						</div>
					</div>
				</div>
					
				<div class="col-md-6 col-lg-5 p-b-30">
					<div class="p-r-50 p-t-5 p-lr-0-lg">
						<form action="" method="post" id="addToCartForm">
						<h4 class="mtext-105 cl2 js-name-detail p-b-14">
							{{productsss.name}}
							
						</h4>
						<input type="text" value="{{productsss._id}}" hidden name="prdid">

						<span class="mtext-106 cl2 mr-2">
							₹{{productsss.price}}
						</span>
						<span class="mtext-106 cl2" style="text-decoration: line-through;">
							₹{{productsss.mrp}}
						</span>
						<h4 class="fs-15 cl2 js-name-detail  p-t-20 p-b-14">
							Edition : {{productsss.variant}}
						</h4>

						<p class="stext-102 cl3 p-t-15">
							{{productsss.description}}
						</p>
						
						<!--  -->
						<div class="p-t-33">
							<div class="flex-w flex-r-m p-b-10">
								<div class="size-203 flex-c-m respon6">
									Size
								</div>

								<div class="size-204 respon6-next">
									<div class="rs1-select2 bor8 bg0">
										<select class="js-select2" onchange="stockcheck(value)" name="size" id="sizeSelect">
											<option value="S" selected name="S">S</option>
											<option value="M" name="M">M</option>
											<option value="L" name="L">L</option>
											<option value="XL" name="XL">XL</option>
											<option value="XXL" name="XXL">XXL</option>
										</select>
										<div class="dropDownSelect2"></div>
									</div>
								</div>
							</div>

							<div class="flex-w flex-r-m p-b-10">
								<div class="size-204 flex-w flex-m respon6-next">
									<div id="wrap-num-product" class="wrap-num-product flex-w m-r-20 m-tb-10">
										<div class="btn-num-product-down cl8 hov-btn3 trans-04 flex-c-m">
											<i class="fs-16 zmdi zmdi-minus"></i>
										</div>

										<input class="mtext-104 cl3 txt-center num-product" id="nubbb" type="number" value="1" name="qty">

										<div class="btn-num-product-up cl8 hov-btn3 trans-04 flex-c-m">
											<i class="fs-16 zmdi zmdi-plus"></i>
										</div>
									</div>
									
									<div class="d-flex">
										<p hidden  id="stockDisplay"></p>
									</div>

									<button  type="submit" id="addcart" class="flex-c-m stext-101 cl0 size-101 bg1 bor1 hov-btn1 p-lr-15 trans-04 js-addcart-">
										Add to cart
									</button>
									
									</form>
								</div>
							</div>	
						</div>


						<!--  -->
						<div class="flex-w flex-m p-l-100 p-t-40 respon7">
							<div class="flex-m bor9 p-r-10 m-r-11">
								<button onclick="addToWishlist('{{userId}}', '{{productsss._id}}')" class="fs-14 cl3 hov-cl1 trans-04 lh-10 p-lr-5 p-tb-2 js-addwish-detail tooltip100" data-tooltip="Add to Wishlist">
									<i class="zmdi zmdi-favorite"></i>
								</button>
							</div>

							<a href="#" class="fs-14 cl3 hov-cl1 trans-04 lh-10 p-lr-5 p-tb-2 m-r-8 tooltip100" data-tooltip="Facebook">
								<i class="fa fa-facebook"></i>
							</a>

							<a href="#" class="fs-14 cl3 hov-cl1 trans-04 lh-10 p-lr-5 p-tb-2 m-r-8 tooltip100" data-tooltip="Twitter">
								<i class="fa fa-twitter"></i>
							</a>

							<a href="#" class="fs-14 cl3 hov-cl1 trans-04 lh-10 p-lr-5 p-tb-2 m-r-8 tooltip100" data-tooltip="Google Plus">
								<i class="fa fa-google-plus"></i>
							</a>
						</div>
					</div>
				</div>
			</div>

				<div class="bor10 m-t-50 p-t-43 p-b-40">
					<!-- Tab01 -->
					<div class="tab01">
						<!-- Nav tabs -->

						<!-- Tab panes -->
						<div class="tab-content p-t-43">
							<!-- - -->
							<div class="tab-pane fade show active" id="description" role="tabpanel">
								<div class="how-pos2 p-lr-15-md">
									<p class="">
										{{{productsss.richdescription}}}
									</p>
								</div>
							</div>

							<!-- - -->


							<!-- - -->

			</div>

		<div class="bg6 flex-c-m flex-w size-302 m-t-73 p-tb-15">
		
			<span class="stext-107 cl6 p-lr-25">
				Category: {{{productsss.category}}}
			</span>
		</div>
	</section>


	<!-- Related Products -->
	<section class="sec-relate-product bg0 p-t-45 p-b-105">
		<div class="container">
			<div class="p-b-45">
				<h3 class="ltext-106 cl5 txt-center">
					Related Products
				</h3>
			</div>

			<!-- Slide2 -->
			<div class="wrap-slick2">
				<div class="slick2">
					{{#each related}}
					<div class="item-slick2 p-l-15 p-r-15 p-t-15 p-b-15">
						<!-- Block2 -->
						<a href="productdetail?id={{this._id}}">
						<div class="block2">
							<div class="block2-pic hov-img0">
								<img src="{{this.image.[0]}}" alt="IMG-PRODUCT">
							</div>

							<div class="block2-txt flex-w flex-t p-t-14">
								<div class="block2-txt-child1 flex-col-l ">
									<a href="productdetail?id={{this._id}}" class="stext-104 cl4 hov-cl1 trans-04 js-name-b2 p-b-6">
										{{this.name}}
									</a>
									<p  class="stext-100 cl4 hov-cl1 trans-04 js-name-b2 p-b-6">
										{{this.variant}}
									</p>
<div class="d-flex">
									<span class="pr-1 stext-105 cl3">
										₹{{this.price}}
									</span>
									<span style="text-decoration: line-through;" class="stext-105 cl3">
										₹{{this.mrp}}
									</span>
</div>

								</div>

								<div class="block2-txt-child2 flex-r p-t-3">
									<button onclick="addToWishlist('{{userId}}', '{{this._id}}')" class="btn-addwish-b2 dis-block pos-relative js-addwish-b2">
									<i class="zmdi zmdi-favorite"></i>
								</button>
									</button>
								</div>
							</div>
						</div>
						</a>
					</div>
					{{/each }}
				</div>
			</div>
		</div>
	</section>
<p id="userID" hidden>{{userId}}</p>
	<p id="S">{{productsss.stock.S}}</p>
	<p id="M">{{productsss.stock.M}}</p>
	<p id="L">{{productsss.stock.L}}</p>
	<p id="XL">{{productsss.stock.XL}}</p>
	<p id="XXL">{{productsss.stock.XXL}}</p>
<script src="vendor/sweetalert/sweetalert.min.js"></script>
<script>

	function addToWishlist(userId, productId) {
		userId= document.getElementById("userID").textContent
    console.log(userId,productId)
    fetch('add-to-wishlist', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ userId, productId })
    })
    .then(response => {
		console.log(response)
        if (!response.ok) {
            throw new Error('Failed to add/remove product to/from wishlist');
        }
		if(response.redirected)
		{
			window.location.href = "/login";
		}
		
        return response.json(); // parse JSON response
    })
    .then(data => {
        // Check if the message indicates the product was added or removed
        const message = data.message;
        const icon = data.icon; // assuming you send an icon type in the response
        
        Swal.fire({
            text: message,
            icon: icon, // use the icon type received from the server
            timer: 2000,
            showConfirmButton: false
        });
    })
    .catch(error => {
        console.error('Error:', error);
    });
}
function stockcheck(productsss) {

    const sizeSelect = document.getElementById('sizeSelect');
    const selectedSize = sizeSelect.value;
    console.log(productsss);
	console.log(typeof productsss)

    const stockDisplay = document.getElementById('stockDisplay');
	if(selectedSize === 'S'){
		stockDisplay.innerHTML = ` {{productsss.stock.S}}`;
		
	}else
	if (selectedSize === 'M') {
	stockDisplay.innerHTML = `{{productsss.stock.M}}`;
	}else
	if (selectedSize === 'L') {
	stockDisplay.innerHTML = `{{productsss.stock.L}}`;
	}else
	if (selectedSize === 'XL') {
	stockDisplay.innerHTML = `{{productsss.stock.XL}}`;
	}else
	{
	stockDisplay.innerHTML = `{{productsss.stock.XXL}}`;
	}
let checkStock=parseInt(stockDisplay.textContent);
	if(checkStock===0){
	const addToCartButton = document.getElementById('addcart');
	addToCartButton.textContent = 'Out Of Stock';
	addToCartButton.style.backgroundColor = "black"
    addToCartButton.disabled = true;
	document.getElementById('wrap-num-product').hidden = true
	}else
	{
	const addToCartButton = document.getElementById('addcart');
	addToCartButton.textContent = 'Add To Cart';
    addToCartButton.disabled = false;
	document.getElementById('wrap-num-product').hidden = false
	}
}




document.addEventListener('DOMContentLoaded', () => {
const stockDisplay = document.getElementById('stockDisplay');
const addToCartButton = document.getElementById('addcart');
const Input = document.getElementById('wrap-num-product');
const sizeSelect = document.getElementById('sizeSelect');
const selectedSize = sizeSelect.value;
stockDisplay.innerHTML = `{{productsss.stock.S}}`;
const initialStock = parseInt(stockDisplay.textContent);
const addToCartForm = document.querySelector('#addToCartForm');
const stock = parseInt(document.getElementById('stockDisplay').textContent);
    const size = addToCartForm.querySelector('select[name="size"]').value;
    const prdid = addToCartForm.querySelector('input[name="prdid"]').value;
    const qty = parseInt(addToCartForm.querySelector('input[name="qty"]').value);
    console.log(size, qty, stock);
	var numProductInput = $(this).closest('.wrap-num-product').find('.num-product');
	const stockS = parseInt(document.getElementById('S').textContent);
	const stockM = parseInt(document.getElementById('M').textContent);
	const stockL = parseInt(document.getElementById('L').textContent);
	const stockXL = parseInt(document.getElementById('XL').textContent);
	const stockXXL = parseInt(document.getElementById('XXL').textContent);

	 if (selectedSize === 'S' && stockS === 0) {
        addToCartButton.textContent = 'Out of Stock';
        addToCartButton.disabled = true;
        addToCartButton.style.backgroundColor = "black";
        Input.hidden = true;
    } else if (selectedSize === 'M' && stockM === 0) {
        addToCartButton.textContent = 'Out of Stock';
        addToCartButton.disabled = true;
        addToCartButton.style.backgroundColor = "black";
        Input.hidden = true;
    } else if (selectedSize === 'L' && stockL === 0) {
        addToCartButton.textContent = 'Out of Stock';
        addToCartButton.disabled = true;
        addToCartButton.style.backgroundColor = "black";
        Input.hidden = true;
    } else if (selectedSize === 'XL' && stockXL === 0) {
        addToCartButton.textContent = 'Out of Stock';
        addToCartButton.disabled = true;
        addToCartButton.style.backgroundColor = "black";
        Input.hidden = true;
    } else {
        addToCartButton.textContent = 'Add to Cart';
        addToCartButton.disabled = false;
        addToCartButton.style.backgroundColor = ""; // Reset button color
        Input.hidden = false; // Show input
    }

    addToCartForm.addEventListener('submit', async (event) => {
      event.preventDefault();

    const stock = parseInt(document.getElementById('stockDisplay').textContent);
    const size = addToCartForm.querySelector('select[name="size"]').value;
    const prdid = addToCartForm.querySelector('input[name="prdid"]').value;
    const qty = parseInt(addToCartForm.querySelector('input[name="qty"]').value);
    console.log(size, qty, stock);

    if (stock < qty || stock === 0) {
        // Show error message and prevent adding to cart
        Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: 'Insufficient stock!'
        });
		addToCartButton.textContent = 'Out of Stock';
        addToCartButton.disabled = true;
        addToCartButton.style.backgroundColor = "black";
        Input.hidden = true;
        return;
    }

      try {
        const response = await fetch("add-to-cart", {
          method: "POST",
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ size, prdid, qty })
        });
        
        if (response.ok) {
          // If response is successful, show SweetAlert
          Swal.fire({
            icon: 'success',
            title: 'Product added to cart!',
            showConfirmButton: false,
            timer: 1500
          });
		  setTimeout(()=>location.reload(),1500);
        } else {
          // If response is not successful, handle error
          Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: 'Something went wrong!'
          });
        }
      } catch (error) {
        console.error('Error adding product to cart:', error);
        // If fetch fails, show SweetAlert with error message
        Swal.fire({
          icon: 'error',
          title: 'Oops...',
          text: 'Something went wrong!'
        });
      }
    });
  });
	// Get the select element

  $('.btn-num-product-down, .btn-num-product-up').on('click', function() {
    var numProductInput = $(this).closest('.wrap-num-product').find('.num-product');
    var stockDisplay = $('#stockDisplay').text(); // Assuming stockDisplay is a text element
    numProductInput.trigger('change');
    setTimeout(function() {
        // Check if the product quantity exceeds the available stock
        if (parseInt(numProductInput.val()) > parseInt(stockDisplay)) {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Quantity cannot exceed available stock!'
            });
            // Reset the quantity to the available stock
            numProductInput.val(stockDisplay);
        }
    }, 100); // Adjust the delay as needed
});


</script>

		